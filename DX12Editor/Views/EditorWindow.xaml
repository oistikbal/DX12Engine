<CustomChromeWindow
    x:Class="DX12Editor.Views.EditorWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DX12Editor.Views.Windows"
    Title="DX12Editor"
    IsShowIcon="False"
    IsShowTitle="False"
    ResizeMode="CanResizeWithGrip"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized">


    <CustomChromeWindow.InputBindings>
        <KeyBinding
            Key="Z"
            Command="{Binding UndoCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="S"
            Command="{Binding SaveCommand}"
            Modifiers="Ctrl" />
    </CustomChromeWindow.InputBindings>

    <CustomChromeWindow.LeftWindowCommands>
        <Grid Margin="4,6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Viewbox
                Grid.Column="0"
                Width="32"
                Height="32"
                Margin="4,2,8,0"
                VerticalAlignment="Center"
                IsHitTestVisible="False">
                <Image Source="pack://application:,,,/Resources/icon.png" Stretch="Uniform" />

            </Viewbox>
            <Menu Grid.Column="1" Margin="0,2,0,0">
                <MenuItem Header="File">
                    <MenuItem Header="Empty" />
                </MenuItem>
            </Menu>
            <Menu Grid.Column="2" Margin="0,2,0,0">
                <MenuItem Header="Edit">
                    <MenuItem Header="Empty" />
                </MenuItem>
            </Menu>
            <Menu Grid.Column="3" Margin="0,2,0,0">
                <MenuItem Header="Assets">
                    <MenuItem Header="Empty" />
                </MenuItem>
            </Menu>
            <Menu Grid.Column="4" Margin="0,2,0,0">
                <MenuItem Header="Windows" ItemsSource="{Binding WindowItems}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Text="{Binding Name}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Command" Value="{Binding DataContext.OpenWindowCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>
            <Border
                Grid.Column="5"
                Margin="5,2,0,0"
                VerticalAlignment="Top"
                IsHitTestVisible="False">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock
                    Margin="6,4,6,4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="{Binding SceneName}"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
            <Border
                Grid.Column="6"
                Margin="5,2,0,0"
                VerticalAlignment="Top"
                IsHitTestVisible="False">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock
                    Margin="6,4,6,4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="{Binding ProjectName}"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>

        </Grid>
    </CustomChromeWindow.LeftWindowCommands>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="6,1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" />

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="75" />
                    <ColumnDefinition Width="Auto" MinWidth="75" />
                    <ColumnDefinition Width="Auto" MinWidth="75" />
                </Grid.ColumnDefinitions>

                <Button
                    Grid.Column="0"
                    Margin="2,2,0,0"
                    Content="Play" />
                <Button
                    Grid.Column="1"
                    Margin="2,2,0,0"
                    Content="Pause" />
                <Button
                    Grid.Column="2"
                    Margin="2,2,0,0"
                    Content="Step" />
            </Grid>

            <Grid Grid.Column="2" HorizontalAlignment="Right">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="History" />


                    <Menu Grid.Column="1">
                        <MenuItem Header="Layout" ItemsSource="{Binding Layouts}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding FileName}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Command" Value="{Binding DataContext.SelectLayoutCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </Menu>
                    <Button
                        Grid.Column="2"
                        Command="{Binding SaveLayout}"
                        Content="Save"
                        Visibility="Hidden" />
                </Grid>
            </Grid>
        </Grid>

        <DockingManager x:Name="dockManager" Grid.Row="1">
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal" />
            </LayoutRoot>
        </DockingManager>

        <StatusBar
            x:Name="mainStatusBar"
            Grid.Row="2"
            Background="{DynamicResource EnvironmentMainWindowActiveDefaultBorder}"
            Foreground="{DynamicResource SystemColorsWindowText}">
            <StatusBarItem Margin="2,0,0,0" Content="Ready" />
            <StatusBarItem
                Margin="0,0,20,0"
                HorizontalAlignment="Right"
                ContentStringFormat="Selected: {0}" />
        </StatusBar>
    </Grid>


</CustomChromeWindow>
